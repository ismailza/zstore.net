@page "/Products/{slug}"
@model DetailsModel
@{
  ViewData["Title"] = Model.Product?.Name;
  var homeUrl = "/";
  var breadcrumbItems = new List<(string Title, string Url)>
  {
    ("Shop", "/Shop"),
    (Model.Product?.Name ?? "Product", "#")
  };
}

<partial name="_Breadcrumb" model="(homeUrl, breadcrumbItems)" />

<section class="bg-white dark:bg-gray-900">
  <div class="container px-6 py-10 mx-auto">
    <div class="lg:flex lg:items-center">
      <div class="lg:w-1/2">
        <div class="relative">
          <img class="object-cover w-full lg:w-full rounded-xl h-48 lg:h-54"
            src="/@(string.IsNullOrEmpty(Model.Product?.ImageUri) ? "images/placeholder.svg" : Model.Product.ImageUri)"
            alt="@Model.Product?.Name">
        </div>
      </div>

      <div class="mt-6 lg:mt-0 lg:w-1/2 lg:pl-10">
        <h1 class="text-3xl font-semibold text-gray-800 dark:text-white">@Model.Product?.Name</h1>
        <p class="mt-2 text-sm text-blue-500">@Model.Product?.Category?.Name</p>
        <p class="mt-4 text-gray-600 dark:text-gray-300">@Model.Product?.Description</p>
        <div class="flex items-center mt-4">
          <span class="text-2xl font-semibold text-gray-700 dark:text-gray-200">@Model.Product?.Price MAD</span>
        </div>
        <form method="post" asp-page-handler="AddToCart" class="mt-6">
          <input type="hidden" name="productId" value="@Model.Product?.Id" />
          <div class="flex items-center mt-4">
            <label for="quantity" class="mr-4 text-gray-700 dark:text-gray-200">Quantity:</label>
            <button type="button" id="decrement"
              class="px-4 py-2 mx-1 text-gray-700 transition-colors duration-300 transform bg-white rounded-md sm:inline dark:bg-gray-800 dark:text-gray-200 hover:bg-blue-500 dark:hover:bg-blue-500 hover:text-white dark:hover:text-gray-200 border border-gray-800">
              &minus;
            </button>
            <input type="number" id="quantity" name="quantity" value="1" min="1"
              class="px-4 py-2 mx-1 text-center w-4 text-gray-700 bg-white rounded-md dark:bg-gray-800 dark:text-gray-200 border border-gray-800" />
            <button type="button" id="increment"
              class="px-4 py-2 mx-1 text-gray-700 transition-colors duration-300 transform bg-white rounded-md sm:inline dark:bg-gray-800 dark:text-gray-200 hover:bg-blue-500 dark:hover:bg-blue-500 hover:text-white dark:hover:text-gray-200 border border-gray-800">
              &plus;
            </button>
            <button type="submit"
              class="flex items-center justify-center w-full px-4 py-2 font-medium text-white uppercase bg-blue-600 rounded-md hover:bg-blue-500 focus:outline-none focus:bg-blue-500">
              <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path
                  d="M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z" />
              </svg>
              Add to Cart
            </button>
          </div>
        </form>
      </div>
    </div>

  </div>
</section>

@section Scripts {
  <script>
    const incrementButton = document.getElementById('increment');
    const decrementButton = document.getElementById('decrement');
    const quantityInput = document.getElementById('quantity');

    incrementButton.addEventListener('click', () => {
      let currentQuantity = parseInt(quantityInput.value);
      quantityInput.value = currentQuantity + 1;
    });

    decrementButton.addEventListener('click', () => {
      let currentQuantity = parseInt(quantityInput.value);
      if (currentQuantity > 1) {
        quantityInput.value = currentQuantity - 1;
      }
    });
  </script>
}