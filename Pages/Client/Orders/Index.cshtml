@page
@model IndexModel
@{
  ViewData["Title"] = "Orders";
  var homeUrl = "/Client";
  var breadcrumbItems = new List<(string Title, string Url)>
  {
    ("Orders", "#")
  };
}

<partial name="_Breadcrumb" model="(homeUrl, breadcrumbItems)" />

<section class="container px-4 mx-auto py-4">
  <div class="flex justify-between items-center">
    <div class="flex items-center gap-x-3">
      <h2 class="text-lg font-medium text-gray-800 dark:text-white">Orders</h2>
      <span class="px-3 py-1 text-xs text-blue-600 bg-blue-100 rounded-full dark:bg-gray-800 dark:text-blue-400">
        @Model.Orders.Count order
      </span>
    </div>
  </div>

  <div class="flex flex-col mt-6">
    <div class="-my-2 overflow-x-auto">
      <div class="inline-block min-w-full py-2 align-middle">
        <div class="overflow-hidden border border-gray-200 dark:border-gray-700 md:rounded-lg">
          <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
            <thead class="bg-gray-50 dark:bg-gray-800">
              <tr>
                <th scope="col"
                  class="px-4 py-3.5 text-sm font-normal text-left rtl:text-right text-gray-500 dark:text-gray-400">
                  Date</th>
                <th scope="col"
                  class="py-3.5 px-4 text-sm font-normal text-left rtl:text-right text-gray-500 dark:text-gray-400">
                  Address</th>
                <th scope="col"
                  class="px-4 py-3.5 text-sm font-normal text-left rtl:text-right text-gray-500 dark:text-gray-400">
                  Total</th>
                <th scope="col"
                  class="px-4 py-3.5 text-sm font-normal text-left rtl:text-right text-gray-500 dark:text-gray-400">
                  Status</th>
                <th scope="col" class="relative py-3.5 px-4">
                  <span class="sr-only">Actions</span>
                </th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200 dark:divide-gray-700 dark:bg-gray-900">
              @if (Model.Orders.Count == 0)
              {
                <tr>
                  <td colspan="100%">
                    <div class="flex items-center py-4 text-center">
                      <div class="flex flex-col w-full max-w-sm px-4 mx-auto">
                        <div class="p-3 mx-auto text-blue-500 bg-blue-100 rounded-full dark:bg-gray-800">
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                            stroke="currentColor" class="w-6 h-6">
                            <path stroke-linecap="round" stroke-linejoin="round"
                              d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
                          </svg>
                        </div>
                        <h1 class="mt-3 text-lg text-gray-800 dark:text-white">No order found
                        </h1>
                        <p class="mt-2 text-gray-500 dark:text-gray-400">
                          You have not placed any order yet.
                        </p>
                      </div>
                    </div>
                  </td>
                </tr>
              }
              @foreach (var order in Model.Orders)
              {
                <tr>
                  <td class="px-4 py-4 text-sm text-gray-500 dark:text-gray-300">
                    @order.CreatedAt
                  </td>
                  <td class="px-4 py-4 text-sm font-medium text-gray-700 whitespace-nowrap">
                    <div class="inline-flex items-center gap-x-3">
                      <div class="flex items-center gap-x-2">
                        <div>
                          <h2 class="font-medium text-gray-800 dark:text-white">
                            @order.Address?.Street @order.Address?.City @order.Address?.Country
                          </h2>
                          <p class="text-sm font-normal text-gray-600 dark:text-gray-400">
                            @order.Address?.State @order.Address?.Zip
                          </p>
                        </div>
                      </div>
                    </div>
                  </td>
                  <td class="px-4 py-4 text-sm text-gray-500 dark:text-gray-300">
                    @order.Total MAD
                  </td>
                  <td class="px-4 py-4 text-sm text-gray-500 dark:text-gray-300">
                    @order.Status
                  </td>
                  <td class="px-4 py-4 text-sm whitespace-nowrap">
                    <div class="flex justify-end items-center gap-x-6">
                      <a title="Details" asp-page="./Details" asp-route-id="@order.Id"
                        class="text-gray-500 transition-colors duration-200 dark:hover:text-yellow-500 dark:text-gray-300 hover:text-yellow-500 focus:outline-none">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"
                          class="w-5 h-5">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M9 5l7 7-7 7" />
                        </svg>
                      </a>
                    </div>
                  </td>
                </tr>
              }
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <div class="mt-6 sm:flex sm:items-center sm:justify-between">
    <div class="text-sm text-gray-500 dark:text-gray-400">
      Page <span class="font-medium text-gray-700 dark:text-gray-100">@Model.CurrentPage of
        @Model.TotalPages</span>
    </div>
    <div class="flex items-center mt-4 gap-x-4 sm:mt-0">
      @if (Model.CurrentPage > 1)
      {
        <a href="?page=@(Model.CurrentPage - 1)"
          class="flex items-center justify-center w-1/2 px-5 py-2 text-sm text-gray-700 capitalize transition-colors duration-200 bg-white border rounded-md sm:w-auto gap-x-2 hover:bg-gray-100 dark:bg-gray-900 dark:text-gray-200 dark:border-gray-700 dark:hover:bg-gray-800">
          Previous
        </a>
      }
      @if (Model.CurrentPage < Model.TotalPages)
      {
        <a href="?page=@(Model.CurrentPage + 1)"
          class="flex items-center justify-center w-1/2 px-5 py-2 text-sm text-gray-700 capitalize transition-colors duration-200 bg-white border rounded-md sm:w-auto gap-x-2 hover:bg-gray-100 dark:bg-gray-900 dark:text-gray-200 dark:border-gray-700 dark:hover:bg-gray-800">
          Next
        </a>
      }
    </div>
  </div>

</section>