@model (string? HomeUrl, List<(string Title, string Url)> BreadcrumbItems)

<div class="bg-white dark:bg-gray-900">
  <div class="container px-6 py-4 mx-auto">
    <div class="flex items-center overflow-x-auto whitespace-nowrap">
      <a href="@Model.HomeUrl" class="text-gray-600 dark:text-gray-200">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
          <path
            d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z" />
        </svg>
      </a>

      @for (int i = 0; i < Model.BreadcrumbItems.Count; i++)
      {
        var item = Model.BreadcrumbItems[i];
        <span class="mx-5 text-gray-500 dark:text-gray-300 rtl:-scale-x-100">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd"
              d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
              clip-rule="evenodd" />
          </svg>
        </span>

        @if (i == Model.BreadcrumbItems.Count - 1)
        {
          <span class="text-blue-600 dark:text-blue-400">@item.Title</span>
        }
        else
        {
          <a href="@item.Url" class="text-gray-600 dark:text-gray-200 hover:underline">
            @item.Title
          </a>
        }
      }
    </div>
  </div>
</div>
